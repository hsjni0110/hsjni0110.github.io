{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/WEB-DEV","result":{"pageContext":{"currentCategory":"WEB-DEV","categories":["All","WEB-DEV","Data-Science"],"edges":[{"node":{"id":"5763bf30-1706-5bff-81c9-0201a7ea0057","excerpt":"사용한 기술 스택 애니메이션 처리 tailwindcss에 대한 소감 우선 tailwindcss는 굉장히 편리합니다. styled-components나 emotion과 비교한다면 가독성면에서는 조금 뒤쳐질지라도 컴포넌트를 나누어 코드를 분할한다면 크게 문제가 되는 정도가 아닙니다.\r\n\r\n오히려 css를 쉽고 빠르게 바꿀 수 있어 기존의 CRA에서 styled-component를 사용하던 때와 비교한다면 next.js + tailwindcss는 몇 배는 빠른 속도로 작업을 가능케 합니다.\r\n\r\n애니메이션 처리는 믿고 쓰는 framer-motion… 애니메이션 이전 상태 값, 중간 상태 값, 이후 상태 값만 입력해주면 되서 굉장히 편리합니다.\r\n Sanity.io 소감  SEO최적화에 적합한 Next.js 웹 페이지 방문 시 캐시된 페이지를 제공하고(fallback page), API데이터가 변경할 때마다 revalidate하여 업데이트 된 새로운 페이지로 빌드됩니다. ISR을 통해 페…","fields":{"slug":"/web-dev-1/"},"frontmatter":{"categories":"WEB-DEV","title":"Next.js와 Sanity로 포트폴리오 사이트 만들기","date":"October 26, 2022"}},"next":{"fields":{"slug":"/data-science-1/"}},"previous":null}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}