{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"ab869cab-179b-515d-bb18-07ccd0144ae9","excerpt":"Next.js 13 버전의 대표적인 변화점 공식문서에서 설명하는 Next.js의 대표적인 변화는 다음과 같습니다. app/Directory(beta) : 파일 기반 라우팅에서 디렉터리 기반 라우팅으로 바뀌었다는 점, app 디렉터리 안에 파일들은 기본적으로 Server Component라는 점 기존에 사용하던 파일 기반 라우팅 구조에서 app 디렉토리 하위에 디렉토리를 기반으로 하는 라우팅 구조로 바뀌었습니다. 한 디렉토리에서 테스트, 스타일, 레이아웃, 부가적인 관련 컴포넌트를 전부 함께 배치하라는 것 같습니다. 익숙해지면 나름 편리할 듯 합니다. app 디렉터리 안에서는 리액트 서버 컴포넌트를 사용합니다. 이는 React 18에 도입되는 최신 기술이며 서버에서 동작합니다. 즉, 서버에서 데이터 패칭 등 수행하고, 클라이언트에서 연속된 API 호출을 막을 수 있습니다. 그 이외에 app 디렉토리 안에 넣을 수 있는 몇 가지 지정 키워드 파일이 있습니다. Layout Page Lo…","frontmatter":{"categories":"WEB-DEV","title":"Next.js 13 버전 가볍게 정리","date":"December 09, 2022"},"fields":{"slug":"/web-dev-4/"}}},{"node":{"id":"0f74b1ac-d800-54f2-bfbd-9c628def8f9e","excerpt":"Firebase Doc 정리해보기 기본적으로 소규모 스타트업에서 벡엔드를 직접 구축한다면 서버 인프라 관리부터 서버단/클라이언트 개발을 모두 신경써야 합니다.\r\n소규모 인원으로 프로젝트를 진행한다면 사용자 피드백을 받아들이기 매우 버겁죠. 하지만 Firebase를 이용한다면 Database, Storage, Auth, Analytics까지 제공해주기 때문에 벡엔드에 대한 큰 고민 없이 서비스를 제작할 수 있습니다. 1. Firebase 연동 연동을 위해서는 Firebase 홈페이지에서 SDK를 통해 연동을 해주어야 합니다. 프로젝트 만들기를 통해 firebase 프로젝트를 만들어 주세요. 그리고 프로젝트 설정에서 웹앱 만들기로 들어가 주어지는 코드를 루트 폴더의 firebase.ts에 입력해 줍니다. 이제 원하는 프로젝트의 빌드 제품을 사용하기 위해서 일련의 설정을 해야합니다. 우선 firebase.ts의 가장 아래쪽을 위 문장으로 수정해줍니다. 이는 앱이 구성되어 있지 않으면 새…","frontmatter":{"categories":"WEB-DEV","title":"Firebase - Firestore와 Storage 사용법","date":"November 17, 2022"},"fields":{"slug":"/web-dev-2/"}}},{"node":{"id":"3ce9d2b2-ef6a-5bbf-905b-1b606cf1aeb4","excerpt":"아래는 인증을 위한 전역 컨텍스트를 모아둔 파일입니다. firebase의 auth 함수들을 이용해 인증 상태를 관리합니다. 그리고 그 결과를 전역 컨텍스트 createContext()를 만들어 Provider안에 value로 전달해 전역적으로 적용 되게끔 합니다. 커스텀 app.tsx는 다음과 같습니다. 이렇게 프로바이더로 감싸주면, 전역 컨텍스트가 children으로 전달됩니다. 로그인, 로그아웃, 회원가입 함수가 포함된 전역 컨텍스트를 사용하는 방법은 다음과 같습니다. 사실 이미 함수를 컨텍스트에 선언해 두었기에 바로 접근이 가능합니다. 페이지 접근 제한은 _app.tsx에서 설정합니다. 위처럼 접근 제한 url을 설정한 뒤, 함수를 통해 현재 url이 접근 제한되는 url이라면, 따로 다른 Route 컴포넌트로 처리해주는데, 이는 위처럼 useEffect와 router를 통해서 login으로 푸쉬해 줍니다.","frontmatter":{"categories":"WEB-DEV","title":"Next.js Firebase 인증정보를 Context로 관리하기","date":"November 17, 2022"},"fields":{"slug":"/web-dev-3/"}}},{"node":{"id":"5763bf30-1706-5bff-81c9-0201a7ea0057","excerpt":"사용한 기술 스택 tailwindcss : 조금 외우기만 하면 빠르고 간편하고 수정도 쉽고 next.js와 호환성도 좋습니다. sanity.io : 벡엔드없이 비개발자가 컨텐츠 관리를 쉽게 할 수 있는 Headless CMS입니다. vercel : 원클릭으로 정적 컨텐츠를 쉽게 배포할 수 있는 호스팅 사이트입니다. 애니메이션 처리 framer-motion : 애니메이션을 위한 패키지로 css 상태 값을 부드럽게 연결해 줍니다. react-simple-typewriter : Typewriter훅과 Cursor를 통해 쉽게 TypeWrite 효과를 줄 수 있는 패키지입니다. tailwind-scrollbar : tailwind를 통해 커스텀 스크롤바를 설정할 수 있습니다. tailwindcss에 대한 소감 우선 tailwindcss는 굉장히 편리합니다. styled-components나 emotion과 비교한다면 가독성면에서는 조금 뒤쳐질지라도 컴포넌트를 나누어 코드를 분할한다면 크게…","frontmatter":{"categories":"WEB-DEV","title":"Next.js와 Sanity로 포트폴리오 사이트 만들기","date":"October 26, 2022"},"fields":{"slug":"/web-dev-1/"}}},{"node":{"id":"2f71d669-43bc-5f93-8d6d-d0ffa0cef45a","excerpt":"1.계기 한/글 문서에는 글자를 한번에 바꿔주는 기능은 있으나, 한번에 그림을 바꾸진 못합니다. 마침 pyautogui의 locateOnScreen 함수를 이용하면 이를 보완하는 것이 가능할 것 같았습니다. 2.설계 처음보는 누구나 사용할 수 있도록 파이썬 내장 모듈인 tkinter와 PIL인 pillow를 이용해서 GUI 형식으로 만들었습니다. 한/글 문서의 한번에 바꾸기에서 바꿀 글자와 바꾼 글자를 입력해야 하듯이 GUI내에서도 바꿀 이미지와 바꾼이미지를 입력받습니다. 캡처 도구의 이용 이미지는 가지고 있는 노트북 혹은 컴퓨터의 모니터 크기에 따라 크기가 달라집니다. 또한 한/글 문서의 확대 수준에 따라서도 바뀝니다. 이는 이미지를 인식하는데 있어 정확도를 감소시킵니다. 따라서 윈도우에 내장되어 있는 캡처도구를 통해 이미지의 규격을 각 기기마다 통일 시켜야합니다. 뿐만 아니라 셀 안의 이미지를 삽입하는 경우, 사진이 한쪽으로 쏠리기도 합니다. 번거롭지만 이미지의 가로/세로 크기…","frontmatter":{"categories":"Data-Science","title":"Python - 화면 인식을 통한 자동화 프로그램 만들기","date":"October 18, 2022"},"fields":{"slug":"/data-science-1/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"한석진","bio":{"role":"아직은 학생인","description":["기억보단 기록하는","기록하는 것이 가치있는","이로운 것을 만드는"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/hsjni0110","linkedIn":"","email":"hansukjinid@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}